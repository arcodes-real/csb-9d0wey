{"version":3,"sources":["components/ToDoList.jsx","components/inputArea.jsx","components/App.jsx","index.js"],"names":["TodoList","props","React","createElement","onClick","onChecked","id","text","InputArea","_useState","useState","_useState2","_slicedToArray","inputText","setInputText","className","onChange","event","newValue","target","value","type","name","onAdd","App","items","setItems","deleteItem","prevItems","filter","item","index","prevValue","concat","_toConsumableArray","map","todoItem","key","ReactDOM","render","document","getElementById"],"mappings":"0LAEe,SAASA,EAASC,GAC/B,OACEC,IAAAC,cAAA,OACEC,QAAS,WACPH,EAAMI,UAAUJ,EAAMK,MAGxBJ,IAAAC,cAAA,UAAKF,EAAMM,OCPF,SAASC,EAAUP,GAChC,IAAAQ,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAO9B,OACET,IAAAC,cAAA,OAAKY,UAAU,QACbb,IAAAC,cAAA,SACEa,SARN,SAAsBC,GACpB,IAAMC,EAAWD,EAAME,OAAOC,MAE9BN,EAAaI,IAMTG,KAAK,OACLC,KAAK,OACLF,MAAOP,IAETX,IAAAC,cAAA,UACEC,QAAS,WACPH,EAAMsB,MAAMV,GACZC,EAAa,MAGfZ,IAAAC,cAAA,YAAM,SCoBCqB,MAxCf,WACE,IAAAf,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BgB,EAAKd,EAAA,GAAEe,EAAQf,EAAA,GAStB,SAASgB,EAAWrB,GAClBoB,GAAS,SAACE,GACR,OAAOA,EAAUC,QAAO,SAACC,EAAMC,GAC7B,OAAOA,IAAUzB,QAKvB,OACEJ,IAAAC,cAAA,OAAKY,UAAU,aACbb,IAAAC,cAAA,OAAKY,UAAU,WACbb,IAAAC,cAAA,UAAI,eAEND,IAAAC,cAACK,EAAS,CAACe,MApBf,SAAiBV,GACfa,GAAS,SAACM,GACR,MAAM,GAANC,OAAAC,YAAWF,GAAS,CAAEnB,UAmBtBX,IAAAC,cAAA,WACED,IAAAC,cAAA,UACGsB,EAAMU,KAAI,SAACC,EAAUL,GAAK,OACzB7B,IAAAC,cAACH,EAAQ,CACPqC,IAAKN,EACLzB,GAAIyB,EACJxB,KAAM6B,EACN/B,UAAWsB,WC/BzBW,IAASC,OAAOrC,IAAAC,cAACqB,EAAG,MAAKgB,SAASC,eAAe,U","file":"static/js/main.180400c0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function TodoList(props) {\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        props.onChecked(props.id);\r\n      }}\r\n    >\r\n      <li>{props.text}</li>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function InputArea(props) {\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  function handleChange(event) {\r\n    const newValue = event.target.value; //we only need the value not the name as it is a single input\r\n\r\n    setInputText(newValue);\r\n  }\r\n  return (\r\n    <div className=\"form\">\r\n      <input\r\n        onChange={handleChange}\r\n        type=\"text\"\r\n        name=\"item\"\r\n        value={inputText}\r\n      />\r\n      <button\r\n        onClick={() => {\r\n          props.onAdd(inputText);\r\n          setInputText(\"\");\r\n        }}\r\n      >\r\n        <span>Add</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport TodoList from \"./ToDoList\";\nimport InputArea from \"./inputArea\";\n\nfunction App() {\n  const [items, setItems] = useState([]);\n\n  function addItem(inputText) {\n    setItems((prevValue) => {\n      return [...prevValue, inputText];\n    });\n  }\n\n  //data \"id\" passed from child component to parent component using callback\n  function deleteItem(id) {\n    setItems((prevItems) => {\n      return prevItems.filter((item, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <InputArea onAdd={addItem} />\n      <div>\n        <ul>\n          {items.map((todoItem, index) => (\n            <TodoList\n              key={index}\n              id={index}\n              text={todoItem}\n              onChecked={deleteItem}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n"],"sourceRoot":""}